buildscript {
    repositories {
        maven { url = "https://files.minecraftforge.net/maven" }
        maven { url = "https://repo.spongepowered.org/maven" }
        jcenter()
        mavenCentral()
    }
    dependencies {
        classpath group: 'net.minecraftforge.gradle', name: 'ForgeGradle', version: '3.+', changing: true
        classpath group: 'org.spongepowered', name: 'mixingradle', version: '0.7-SNAPSHOT'
    }
}

plugins {
    id("com.wynprice.cursemaven") version("2.1.1")
}

repositories {
    maven {	name = "BlameJared";	url = "https://maven.blamejared.com/" }         // IE & CT Files
}

apply plugin: 'net.minecraftforge.gradle'
apply plugin: 'maven-publish'
apply plugin: 'org.spongepowered.mixin'

version = mod_version
group = mod_group
archivesBaseName = mod_jarname

sourceCompatibility = targetCompatibility = compileJava.sourceCompatibility = compileJava.targetCompatibility = '1.8'

mixin {
    add sourceSets.main, "${mod_id}.refmap.json"
}

sourceSets {
    main {
        resources {
            srcDirs = [
                    "$rootDir/src/main/resources",
                    "$rootDir/src/generated/resources"
            ]
        }
    }
    datagen {
        compileClasspath += main.compileClasspath
        runtimeClasspath += main.runtimeClasspath
        compileClasspath += main.output
        runtimeClasspath += main.output
    }
}

minecraft {
    mappings channel: 'snapshot', version: mcp_version

    runs {
        client {
            workingDirectory project.file('run')
            property 'forge.logging.markers', 'SCAN,REGISTRIES,REGISTRYDUMP'
            property 'forge.logging.console.level', 'debug'
            property 'mixin.debug.export', 'true'
            arg "-mixin.config=${mod_id}.mixins.json".toString()
            property 'fml.earlyprogresswindow', 'false'
            property 'mixin.env.disableRefMap', 'true'
            arg "--username=Dev" + (new Random()).nextInt(999)

            mods {
                mod_id {
                    source sourceSets.main
                }
            }
        }

        server {
            workingDirectory project.file('server')
            property 'forge.logging.markers', 'SCAN,REGISTRIES,REGISTRYDUMP'
            property 'forge.logging.console.level', 'debug'
            arg "-mixin.config=${mod_id}.mixins.json".toString()
            arg "-Dmixin.debug.export=true"
            property 'fml.earlyprogresswindow', 'false'
            property 'mixin.env.disableRefMap', 'true'

            mods {
                mod_id {
                    source sourceSets.main
                }
            }
        }

        data {
            workingDirectory project.file('run')
            property 'forge.logging.markers', 'SCAN,REGISTRIES,REGISTRYDUMP'
            property 'forge.logging.console.level', 'debug'
            args '--mod', mod_id,
                    '--all',
                    '--output', file('src/generated/resources/'),
                    '--existing', sourceSets.main.resources.srcDirs[0],
                    '--existing-mod', 'immersiveengineering'
            arg "-mixin.config=${mod_id}.mixins.json".toString()
            property 'mixin.env.disableRefMap', 'true'

            mods {
                mod_id {
                    source sourceSets.main
                    source sourceSets.datagen
                }
            }
        }
    }
}

dependencies {
    //minecraft 'net.minecraftforge:forge:1.16.1-32.0.108' // 1.16.1
    minecraft "net.minecraftforge:forge:${build_forge_version}" // 1.16.5

    // Cloth Config API (Forge)
    // www.curseforge.com/minecraft/mc-mods/cloth-config-forge
    runtimeOnly fg.deobf("curse.maven:cloth-config-forge:${build_config_version}")
    compileOnly fg.deobf("curse.maven:cloth-config-forge:${build_config_version}")

    // Immersive Engineering
    // www.curseforge.com/minecraft/mc-mods/immersive-engineering
    runtimeOnly fg.deobf("blusunrize.immersiveengineering:ImmersiveEngineering:${build_ie_version}")
    compileOnly fg.deobf("blusunrize.immersiveengineering:ImmersiveEngineering:${build_ie_version}")

    datagenRuntimeOnly fg.deobf("blusunrize.immersiveengineering:ImmersiveEngineering:${build_ie_version}:datagen")
    compileOnly fg.deobf("blusunrize.immersiveengineering:ImmersiveEngineering:${build_ie_version}:datagen")

    // Simple Voice Chat
    // www.curseforge.com/minecraft/mc-mods/simple-voice-chat
    runtimeOnly fg.deobf("curse.maven:simple_voice_chat-416089:${build_voicechat_version}")
    compileOnly fg.deobf("curse.maven:simple_voice_chat-416089:${build_voicechat_version}")

    // utility / testing

    // Smooth Boot (Forge)
    // www.curseforge.com/minecraft/mc-mods/smooth-boot-forge
    runtimeOnly fg.deobf("curse.maven:smooth_boot_forge-420913:${build_smoothboot_version}")

    // GameMenuModOption
    // www.curseforge.com/minecraft/mc-mods/gamemenumodoption
    //runtimeOnly fg.deobf("curse.maven:gamemenumodoption:2990253") // 1.16.1
    runtimeOnly fg.deobf("curse.maven:gamemenumodoption:${build_modoption_version}") // 1.16.5 - version 1.8 (3273863) has mixins that crash this dev env

}

jar {
    manifest {
        attributes([
                "Specification-Title": mod_name,
                "Specification-Vendor": mod_author,
                "Specification-Version": "1",
                "Implementation-Title": mod_name,
                "Implementation-Version": version,
                "Implementation-Vendor" : mod_author,
                "Implementation-Timestamp": new Date().format("yyyy-MM-dd'T'HH:mm:ssZ"),
                "MixinConfigs": "${mod_id}.mixins.json"
        ])
    }
}

processResources {
    inputs.property "version", project.version

    from(sourceSets.main.resources.srcDirs) {
        include 'META-INF/mods.toml'

        expand  'mod_group': mod_group,
                'mod_id': mod_id,
                'mod_name': mod_name,
                'mod_version': mod_version,
                'mod_author': mod_author,
                'minecraft_version': minecraft_version,
                'forge_version': forge_version,
                'voicechat_version': voicechat_version,
                'ie_version': ie_version
    }

    from(sourceSets.main.resources.srcDirs) {
        exclude 'META-INF/mods.toml'
    }
}

jar.finalizedBy('reobfJar')

